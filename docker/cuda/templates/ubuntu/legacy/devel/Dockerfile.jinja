ARG IMAGE_NAME
FROM ${IMAGE_NAME}:{{ cuda.version.major }}.{{ cuda.version.minor }}-runtime-{{ cuda.os.distro }}{{ cuda.os.version }}{{ cuda.image_tag_suffix if "image_tag_suffix" in cuda }}

LABEL maintainer "NVIDIA CORPORATION <cudatools@nvidia.com>"

{% if "nvml_dev" in cuda.components %}
    {% set nvml_dev_component_version = cuda.version.major + "-" + cuda.version.minor + "=" + cuda.components.nvml_dev.version %}
{% endif %}
{% if "command_line_tools" in cuda.components %}
    {% set cmdline_tools_component_version = cuda.version.major + "-" + cuda.version.minor + "=" + cuda.components.command_line_tools.version %}
{% endif %}
{% if "libcublas_dev" in cuda.components %}
    {% set libcublas_dev_component_version = cuda.version.major + "-" + cuda.version.minor + "=" + cuda.components.libcublas_dev.version %}
{% endif %}
{% if "libnccl2_dev" in cuda.components and cuda.components.libnccl2_dev %}
    {% if cuda.version.major | int >= 10 %}
        {% set nccl_dev_component_version_with_cuda = "%s+cuda%s.%s" | format(cuda.components.libnccl2_dev.version, cuda.version.major, cuda.version.minor) %}
    {% endif %}
{% endif %}
{% if "libraries_dev" in cuda.components %}
    {% set libraries_dev_component_version = cuda.version.major + "-" + cuda.version.minor + "=" + cuda.components.libraries_dev.version %}
{% endif %}
{% if "minimal_build" in cuda.components %}
    {% set minimal_build_component_version = cuda.version.major + "-" + cuda.version.minor + "=" + cuda.components.minimal_build.version %}
{% endif %}
{% if "libcusparse" in cuda.components %}
    {% set libcusparse_component_version = cuda.version.major + "-" + cuda.version.minor + "=" + cuda.components.libcusparse.version %}
{% endif %}
{% if "libcusparse_dev" in cuda.components %}
    {% set libcusparse_dev_component_version = cuda.version.major + "-" + cuda.version.minor + "=" + cuda.components.libcusparse_dev.version -%}
{% endif %}
{% if "libnpp_dev" in cuda.components %}
    {% set libnpp_dev_component_version = cuda.version.major + "-" + cuda.version.minor + "=" + cuda.components.libnpp_dev.version %}
{% endif %}
{% if "nvprof" in cuda.components %}
    {% set nvprof_component_version = cuda.version.major + "-" + cuda.version.minor + "=" + cuda.components.nvprof.version %}
{% endif %}
{% if "libnccl2_dev" in cuda.components %}
    {% set nccl_dev_component_version = cuda.components.libnccl2_dev.version %}
    {% if "-" in nccl_dev_component_version %}
        {% set nccl_dev_component_version = cuda.components.libnccl2_dev.version[:-2] %}
    {% endif %}
ENV NCCL_VERSION {{ nccl_dev_component_version }}

{% endif -%}

RUN apt-get update && apt-get install -y --no-install-recommends \
    cuda-nvml-dev-{{ nvml_dev_component_version if nvml_dev_component_version and cuda.version.major | int >= 10 else "$CUDA_PKG_VERSION" }} \
    cuda-command-line-tools-{{ cmdline_tools_component_version if cmdline_tools_component_version and cuda.version.major | int >= 10 else "$CUDA_PKG_VERSION" }} \
{% if (cuda.version.major | int >= 9 and cuda.version.minor | int > 0) or (cuda.version.major | int > 9 and cuda.version.minor | int >= 0) %}
    cuda-nvprof-{{ nvprof_component_version if nvprof_component_version and cuda.version.major | int >= 10 else "$CUDA_PKG_VERSION" }} \
{% endif %}
    {% if ((cuda.arch != "arm64" or cuda.arch == "ppc64le") and cuda.version.major | int <= 10) or cuda.version.build == 89 %}
    cuda-npp-dev-{{ libnpp_component_version if libnpp_component_version and cuda.version.major | int >= 10 else "$CUDA_PKG_VERSION" }} \
    {% else %}
    libnpp-dev-{{ libnpp_dev_component_version if libnpp_dev_component_version and cuda.version.major | int >= 10 else "$CUDA_PKG_VERSION" }} \
    {% endif %}
{% if cuda.version.major | int >= 9 and cuda.version.major | int >= 1 %}
    cuda-libraries-dev-{{ libraries_dev_component_version if libraries_dev_component_version and cuda.version.major | int >= 10 else "$CUDA_PKG_VERSION" }} \
    cuda-minimal-build-{{ minimal_build_component_version if minimal_build_component_version and cuda.version.major | int >= 10 else "$CUDA_PKG_VERSION" }} \
{% endif %}
{% if cuda.version.major_minor == "8.0" %}
    cuda-core-$CUDA_PKG_VERSION \
    cuda-misc-headers-$CUDA_PKG_VERSION \
    cuda-nvrtc-dev-$CUDA_PKG_VERSION \
    cuda-nvgraph-dev-$CUDA_PKG_VERSION \
    cuda-cusolver-dev-$CUDA_PKG_VERSION \
    cuda-cublas-dev-8-0=8.0.61.2-1 \
    cuda-cufft-dev-$CUDA_PKG_VERSION \
    cuda-curand-dev-$CUDA_PKG_VERSION \
    cuda-cusparse-dev-$CUDA_PKG_VERSION \
    cuda-npp-dev-$CUDA_PKG_VERSION \
    cuda-cudart-dev-$CUDA_PKG_VERSION \
    cuda-driver-dev-$CUDA_PKG_VERSION \
{% elif cuda.version.major | int < 11  %}
    {% if "libcublas_dev" in cuda.components %}
        {% if cuda.version.major_minor in ["10.1", "10.2"] %}
            {% set l4t = (cuda.arch == "arm64" and cuda.version.build != 89) %}
            {% set suffix = "" %}
            {# {% set suffix = "-{}-{}".format(cuda.version.major, cuda.version.minor) %} #}
            {# {% set suffix = "10" if not l4t else "-{}-{}".form(cuda.version.major, cuda.version.minor) %} #}
            {% set cublas_dev_vers = suffix + "=" + cuda.components.libcublas_dev.version %}
            {# {% set cublas_dev_vers = "=" + cuda.components.libcublas_dev.version %} #}
        {% else %}
            {% set cublas_dev_vers = "-" + libcublas_dev_component_version %}
        {% endif %}
    {% endif %}
    {% if cuda.version.major_minor in ["9.0", "9.1", "9.2", "10.0"] %}
        {% if cuda.version.major_minor == "9.0" %}
    cuda-core-9-0=9.0.176.3-1 \
            {% set cublas_dev_vers = "-9-0=9.0.176.4-1" %}
        {% endif %}
        {% if cuda.version.major_minor == "9.1" %}{% set cublas_dev_vers = "-9-1=9.1.85.3-1" %}{% endif %}
        {% if cuda.version.major_minor == "9.2" %}{% set cublas_dev_vers = "-9-2=9.2.148.1-1" %}{% endif %}
    cuda-cublas-dev{{ cublas_dev_vers }} \
    {% else %}
    libcublas-dev{{ cublas_dev_vers }} \
    {% endif %}
    {# libnccl2_dev can be unset if libnccl2.source is being used #}
    {% if nccl_dev_component_version_with_cuda %}
    libnccl-dev={{ nccl_dev_component_version_with_cuda }} \
    {% endif %}
{% else %}
    {# libnccl2_dev can be unset if libnccl2.source is being used #}
    {% if cuda.components.libnccl2_dev and not "source" in cuda.components.libnccl2 %}
    libnccl-dev={{ nccl_dev_component_version_with_cuda }} \
    {% endif %}
    libcublas-dev-{{ libcublas_dev_component_version if libcublas_dev_component_version and cuda.version.major | int >= 10 else "10.2.{}.{}-1".format(cuda.version.minor, cuda.version.build) }} \
    libcusparse-{{ libcusparse_component_version if libcusparse_component_version and cuda.version.major | int >= 10 else "10.2.{}.{}-1".format(cuda.version.minor, cuda.version.build) }} \
    libcusparse-dev-{{ libcusparse_dev_component_version if libcusparse_dev_component_version and cuda.version.major | int >= 10 else "10.2.{}.{}-1".format(cuda.version.minor, cuda.version.build) }} \
{% endif %}
    {% if cuda.components.libnccl2_dev and not "source" in cuda.components.libnccl2 %}
    && apt-mark hold libnccl-dev \
    {% endif %}
    && rm -rf /var/lib/apt/lists/*

{% if cuda.version.major_minor in ["10.0", "10.1"] %}
    {% set cublas_pkg_name = "cuda-cublas-dev-{}-{}".format(cuda.version.major, cuda.version.minor) %}
    {% if cuda.version.major_minor == "10.1" %}
        {% set cublas_pkg_name = "libcublas-dev" %}
    {% endif %}
# apt from auto upgrading the cublas package. See https://gitlab.com/nvidia/container-images/cuda/-/issues/88
RUN apt-mark hold {{ cublas_pkg_name }}

{% endif -%}

{% if "libnccl2" in cuda.components and "source" in cuda.components.libnccl2 %}
    {% set arch = cuda.arch %}
    {% if cuda.arch == "arm64" %} {% set arch = "aarch64" %} {% endif %}
    {% set basename =  "nccl_" + cuda.components.libnccl2.version + "-1+cuda" + cuda.version.major + "." + cuda.version.minor + "_" + arch + ".txz" %}
RUN apt update && apt install curl xz-utils -y --no-install-recommends && NCCL_DOWNLOAD_SUM={{ cuda.components.libnccl2.sha256sum }} && \
    curl -fsSL {{ cuda.components.libnccl2.source }} -O && \
    echo "$NCCL_DOWNLOAD_SUM  {{ basename }}" | sha256sum -c - && \
    tar --no-same-owner --keep-old-files --lzma -xvf  {{ basename }} -C /usr/local/cuda/include/ --strip-components=2 --wildcards '*/include/*' && \
    tar --no-same-owner --keep-old-files --lzma -xvf  {{ basename }} -C /usr/local/cuda/lib64/ --strip-components=2 --wildcards '*/lib/libnccl.so' && \
    rm {{ basename }} && \
    ldconfig && rm -rf /var/lib/apt/lists/*

{% endif %}
ENV LIBRARY_PATH /usr/local/cuda/lib64/stubs

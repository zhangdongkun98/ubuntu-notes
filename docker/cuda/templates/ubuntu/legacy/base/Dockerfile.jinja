{% set arch = cuda.arch %}
{# {% if arch != "x86_64" %} #}
{# # NOTICE: requires experimental features to be enabled on the docker daemon #}
{# FROM --platform={{ arch }} {{ cuda.base_image }} #}
{# {% else %} #}
FROM {{ cuda.base_image }}
{# {% endif %} #}

LABEL maintainer "NVIDIA CORPORATION <cudatools@nvidia.com>"

{% if cuda.arch == "ppc64le" %}
    {% set arch = cuda.arch | replace("le", "el") %}
{% elif cuda.arch == "arm64" and "repo_url" not in cuda %}
    {% set arch = cuda.arch | replace("arm64", "sbsa") %}
{% endif %}
{% set os_version_stripped = cuda.os.version | replace(".", "") %}
{% set repo_url = cuda.repo_url if "repo_url" in cuda else "https://developer.download.nvidia.com/compute/cuda/repos/ubuntu" + os_version_stripped + "/" + arch -%}

RUN apt-get update && apt-get install -y --no-install-recommends \
{% if cuda.os.version in ["18.04", "20.04"] %}
    gnupg2 curl ca-certificates && \
    curl -fsSL {{ repo_url }}/7fa2af80.pub | apt-key add - && \
    echo "deb {{ repo_url }} /" > /etc/apt/sources.list.d/cuda.list && \
    {% if cuda.use_ml_repo %}
    echo "deb {{ cuda.ml_repo_url }} /" > /etc/apt/sources.list.d/nvidia-ml.list && \
    {% endif %}
    apt-get purge --autoremove -y curl \
{% elif cuda.os.version == "14.04" or cuda.os.version == "16.04" %}
    ca-certificates apt-transport-https gnupg-curl && \
    NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 && \
    NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 && \
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu{{ os_version_stripped }}/{{ arch }}/7fa2af80.pub && \
    apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +{{ "2" if cuda.os.version == "14.04" else "5" }} > cudasign.pub && \
    echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum -c --strict - && rm cudasign.pub && \
    echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu{{ os_version_stripped }}/{{ arch }} /" > /etc/apt/sources.list.d/cuda.list && \
    {% if cuda.use_ml_repo and cuda.version.major | int > 8 %}
    echo "deb {{ cuda.ml_repo_url }} /" > /etc/apt/sources.list.d/nvidia-ml.list && \
    {% endif %}
    apt-get purge --auto-remove -y gnupg-curl \
{% endif %}
    && rm -rf /var/lib/apt/lists/*

ENV CUDA_VERSION {{ cuda.version.release_label }}
{% if cuda.version.major | int != 11 %}
ENV CUDA_PKG_VERSION {{ cuda.version.major }}-{{ cuda.version.minor }}=$CUDA_VERSION-1
{% endif %}

{% if "cudart" in cuda.components %}
{% set cudart_component_version = cuda.version.major + "-" + cuda.version.minor + "=" + cuda.components.cudart.version %}
{% endif %}
{% if "docs" in cuda.components %}
{% set docs_component_version = cuda.version.major + "-" + cuda.version.minor + "=" + cuda.components.docs.version %}
{% endif -%}

# For libraries in the cuda-compat-* package: https://docs.nvidia.com/cuda/eula/index.html#attachment-a
RUN apt-get update && apt-get install -y --no-install-recommends \
    cuda-cudart-{{ cudart_component_version if cuda.version.major | int == 11 else "$CUDA_PKG_VERSION" }} \
    {# cuda-documentation-{{ docs_component_version if cuda.version.major | int == 11 else "$CUDA_PKG_VERSION" }} \ #}
{% if cuda.version.major | int >= 10 and cuda.arch != "arm64" %}
    cuda-compat-{{ cuda.version.major }}-{{ cuda.version.minor }} \
{% elif cuda.version.major | int == 8 %}
    cuda-nvrtc-$CUDA_PKG_VERSION \
    cuda-nvgraph-$CUDA_PKG_VERSION \
    cuda-cusolver-$CUDA_PKG_VERSION \
    cuda-cublas-8-0=8.0.61.2-1 \
    cuda-cufft-$CUDA_PKG_VERSION \
    cuda-curand-$CUDA_PKG_VERSION \
    cuda-cusparse-$CUDA_PKG_VERSION \
    cuda-npp-$CUDA_PKG_VERSION \
{% endif %}
    && ln -s cuda-{{ cuda.version.major }}.{{ cuda.version.minor }} /usr/local/cuda && \
    rm -rf /var/lib/apt/lists/*

# Required for nvidia-docker v1
{% if cuda.version.major | int < 10 %}
LABEL com.nvidia.volumes.needed="nvidia_driver"
LABEL com.nvidia.cuda.version="${CUDA_VERSION}"
{% endif -%}
RUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf

ENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64

# nvidia-container-runtime
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility
{% if "requires" in cuda %}
ENV NVIDIA_REQUIRE_CUDA "{{ cuda.requires }}"
{% endif %}

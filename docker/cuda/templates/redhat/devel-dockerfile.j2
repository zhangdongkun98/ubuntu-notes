ARG IMAGE_NAME
FROM ${IMAGE_NAME}:{{ cuda.version.release_label }}-runtime-{{ cuda.os.distro }}{{ cuda.os.version }}{{ cuda.image_tag_suffix if "image_tag_suffix" in cuda }}

LABEL maintainer "NVIDIA CORPORATION <sw-cuda-installer@nvidia.com>"

{# To add a new package and have it detected by the automation, set it here as <package_name_with_underscores>_component_version #}
{% set std_version = cuda.version.major + "-" + cuda.version.minor + "-" + cuda.version.release_label + "-1" -%}
{% set cuda_nvprof_component_version = cuda.version.major + "-" + cuda.version.minor + "-" + cuda.components.nvprof.version -%}
{% set cuda_cudart_devel_component_version = cuda.version.major + "-" + cuda.version.minor + "-" + cuda.components.cudart_dev.version %}
{% set cuda_nvml_devel_component_version = cuda.version.major + "-" + cuda.version.minor + "-" + cuda.components.nvml_dev.version %}
{% set libcublas_devel_component_version = cuda.version.major + "-" + cuda.version.minor + "-" + cuda.components.libcublas_dev.version %}
{% set libnpp_devel_component_version = cuda.version.major + "-" + cuda.version.minor + "-" + cuda.components.libnpp_dev.version -%}

{% if "libnccl2" in cuda.components %}
    {% set libnccl2_component_version = cuda.components.libnccl2.version + "+cuda" + cuda.version.major + "." + cuda.version.minor %}
ENV NCCL_VERSION {{ cuda.components.libnccl2.version[:-2] }}

{% endif -%}

RUN yum install -y \
    make \
    cuda-command-line-tools-{{ std_version }} \
    cuda-libraries-devel-{{ std_version }} \
    cuda-minimal-build-{{ std_version }} \
    cuda-cudart-devel-{{ cuda_cudart_devel_component_version }} \
    cuda-nvprof-{{ cuda_nvprof_component_version }} \
    cuda-nvml-devel-{{ cuda_nvml_devel_component_version }} \
    libcublas-devel-{{ libcublas_devel_component_version }} \
    libnpp-devel-{{ libnpp_devel_component_version }} \
    {% if libnccl2_component_version and "libnccl2" in cuda.components and "source" not in cuda.components.libnccl2 %}
    libnccl-devel-{{ libnccl2_component_version }} \
    {% endif %}
    && yum clean all \
    && rm -rf /var/cache/yum/*

{% if "libnccl2" in cuda.components and "source" in cuda.components.libnccl2 %}
    {% set arch = cuda.arch %}
    {% if cuda.arch == "arm64" %} {% set arch = "aarch64" %} {% endif %}
    {% set basename =  "nccl_" + cuda.components.libnccl2.version + "-1+cuda" + cuda.version.major + "." + cuda.version.minor + "_" + arch + ".txz" %}
    {% if cuda.arch == "arm64" %} {% set arch = "aarch64" %} {% endif %}
RUN yum install -y xz && NCCL_DOWNLOAD_SUM={{ cuda.components.libnccl2.sha256sum }} && \
    curl -fsSL {{ cuda.components.libnccl2.source }} -O && \
    echo "$NCCL_DOWNLOAD_SUM  {{ basename }}" | sha256sum -c - && \
    unxz {{ basename }} && \
    tar --no-same-owner --keep-old-files -xvf  {{ basename[:-4] + ".tar" }} -C /usr/local/cuda/include/ --strip-components=2 --wildcards '*/include/*' && \
    tar --no-same-owner --keep-old-files -xvf  {{ basename[:-4] + ".tar" }} -C /usr/local/cuda/lib64/ --strip-components=2 --wildcards '*/lib/libnccl.so' && \
    rm -f {{ basename[:-4] + ".tar" }} && \
    ldconfig

{% endif %}
ENV LIBRARY_PATH /usr/local/cuda/lib64/stubs

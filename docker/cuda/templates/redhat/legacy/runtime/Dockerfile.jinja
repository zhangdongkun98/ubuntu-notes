ARG IMAGE_NAME
FROM ${IMAGE_NAME}:{{ cuda.version.major }}.{{ cuda.version.minor }}-base-{{ cuda.os.distro }}{{ cuda.os.version }}{{ cuda.image_tag_suffix if "image_tag_suffix" in cuda }}

LABEL maintainer "NVIDIA CORPORATION <sw-cuda-installer@nvidia.com>"

{% if "libraries_dev" in cuda.components %}
    {% set libraries_component_version = cuda.version.major + "-" + cuda.version.minor + "-" + cuda.components.libraries_dev.version %}
{% endif %}
{% if "libnpp" in cuda.components %}
    {% set libnpp_component_version = cuda.version.major + "-" + cuda.version.minor + "-" + cuda.components.libnpp.version %}
{% endif %}
{% if "nvtx" in cuda.components %}
    {% set nvtx_component_version = cuda.version.major + "-" + cuda.version.minor + "-" + cuda.components.nvtx.version %}
{% endif %}
{% if "libcublas" in cuda.components %}
    {% set libcublas_component_version = cuda.version.major + "-" + cuda.version.minor + "-" + cuda.components.libcublas.version %}
{% endif %}
{% if "libnccl2" in cuda.components %}
    {% set nccl_component_version = cuda.components.libnccl2.version %}
    {% if "-" in nccl_component_version %}
        {% set nccl_component_version = cuda.components.libnccl2.version[:-2] %}
    {% endif %}
    {% set nccl_component_version_with_cuda = cuda.components.libnccl2.version + "+cuda" + cuda.version.major + "." + cuda.version.minor %}
ENV NCCL_VERSION {{ nccl_component_version }}

{% endif -%}

{% if cuda.version.major_minor == "10.0" or cuda.version.major_minor == "10.1" %}
# setopt flag prevents yum from auto upgrading. See https://gitlab.com/nvidia/container-images/cuda/-/issues/88
RUN yum install --setopt=obsoletes=0 -y \
{% else %}
RUN yum install -y \
{% endif %}
    cuda-libraries-{{ libraries_component_version if libraries_component_version else "$CUDA_PKG_VERSION" }} \
    {% if cuda.version.major_minor == "9.0" %}
    cuda-cublas-{{ cuda.version.major }}-{{ cuda.version.minor }}={{ cuda.version.release_label }}.4-1 \
    {% elif cuda.version.major_minor == "10.0" %}
    cuda-cublas-$CUDA_PKG_VERSION \
    {% endif %}
    {% if (cuda.version.major_minor == "9.2") or cuda.version.major | int >= 10 %}
    cuda-nvtx-{{ nvtx_component_version if cuda.version.major | int == 11 else "$CUDA_PKG_VERSION" }} \
    {% endif %}
    {% if cuda.version.major_minor == "10.1"  or cuda.version.major_minor == "10.2" %}
    cuda-npp-{{ libnpp_component_version if libnpp_component_version else "$CUDA_PKG_VERSION" }} \
    libcublas10-{{ libcublas_component_version[5:] }} \
    {% elif cuda.version.major | int > 10 %}
    libnpp-{{ libnpp_component_version if libnpp_component_version else "$CUDA_PKG_VERSION" }} \
    libcublas-{{ libcublas_component_version }} \
    {% endif %}
    {% if nccl_component_version_with_cuda and "libnccl2" in cuda.components and "source" not in cuda.components.libnccl2 %}
    libnccl-{{ nccl_component_version_with_cuda }} \
    {% endif %}
    && yum clean all \
    && rm -rf /var/cache/yum/*

{% if cuda.version.major_minor in ["10.0", "10.1"] and cuda.os.distro != "ubi" %}
RUN yum install -y yum-plugin-versionlock && yum versionlock libcublas10

{% endif -%}

{% if "libnccl2" in cuda.components and "source" in cuda.components.libnccl2 %}
    {% set arch = cuda.arch %}
    {% if cuda.arch == "arm64" %} {% set arch = "aarch64" %} {% endif %}
    {% set basename =  "nccl_" + cuda.components.libnccl2.version + "-1+cuda" + cuda.version.major + "." + cuda.version.minor + "_" + arch + ".txz" %}
RUN yum install -y xz && NCCL_DOWNLOAD_SUM={{ cuda.components.libnccl2.sha256sum }} \
    && curl -fsSL {{ cuda.components.libnccl2.source }} -O \
    && echo "$NCCL_DOWNLOAD_SUM  {{ basename }}" | sha256sum -c - \
    && unxz {{ basename }} \
    && tar --no-same-owner --keep-old-files -xvf {{ basename[:-4] + ".tar" }} -C /usr/local/cuda/lib64/ --strip-components=2 --wildcards '*/lib/libnccl.so.*' \
    && tar --no-same-owner --keep-old-files -xvf  {{ basename[:-4] + ".tar" }} -C /usr/lib64/pkgconfig/ --strip-components=3 --wildcards '*/lib/pkgconfig/*' \
    && rm -f {{ basename[:-4] + ".tar" }} \
    && ldconfig \
    && yum clean all \
    && rm -rf /var/cache/yum/*
{% endif %}

ARG IMAGE_NAME
FROM ${IMAGE_NAME}:{{ cuda.version.release_label }}-{{ cuda.cudnn.target }}-{{ cuda.os.distro }}{{ cuda.os.version }}{{ cuda.image_tag_suffix }}
LABEL maintainer "NVIDIA CORPORATION <sw-cuda-installer@nvidia.com>"

{% set cudnn_version = cuda.cudnn.version %}
{% if "-" in cuda.cudnn.version %}
  {% set cudnn_version = cuda.cudnn.version[:-2] %}
{% endif -%}

ENV CUDNN_VERSION {{ cudnn_version }}
LABEL com.nvidia.cudnn.version="${CUDNN_VERSION}"

{# {% if not cuda.cudnn.version.startswith("7.6") -%} #}
{#   {% set cudnn_version = cuda.cudnn.version[:3] -%} #}
{% if "-" in cuda.cudnn.version %}
  {% set cudnn_version = cuda.cudnn.version[:-2] %}
{% endif -%}

{% set iz_dev = "" %}
{% if cuda.cudnn.target == "devel" -%}
  {% set iz_dev = "-devel" %}
{% endif %}
{% if "source" in cuda.cudnn and cuda.cudnn.source %}
RUN CUDNN_DOWNLOAD_SUM={{ cuda.cudnn.sha256sum }} && \
    curl -fsSL {{ cuda.cudnn.source }} -O && \
  {% set basename = cuda.cudnn.basename %}
    echo "$CUDNN_DOWNLOAD_SUM  {{ basename }}" | sha256sum -c - && \
    rpm -vih {{ basename }} && \
    rm -f {{ basename }} && \
    ldconfig
  {% if cuda.cudnn.target == "devel" %}

RUN CUDNN_DOWNLOAD_SUM={{ cuda.cudnn.dev.sha256sum }} && \
    curl -fsSL {{ cuda.cudnn.dev.source }} -O && \
    {% set basename = cuda.cudnn.dev.basename %}
    echo "$CUDNN_DOWNLOAD_SUM  {{ basename }}" | sha256sum -c - && \
    rpm -vih {{ basename }} && \
    rm -f {{ basename }} && \
    ldconfig
  {% endif %}
{% elif "sha256sum" not in cuda.cudnn %}
RUN yum install -y \
    libcudnn{{ cuda.cudnn.version[0] }}{{ iz_dev }}-${CUDNN_VERSION}-1.cuda{{ cuda.version.major }}.{{ cuda.version.minor }} \
    && yum clean all \
    && rm -rf /var/cache/yum/*
{% else %}
  {% set arch = cuda.arch | replace("86_", "") %}
  {% set archive_path = "cuda/lib64/libcudnn.so.*" %}
  {% if arch == "ppc64le" %}
      {% set archive_path = "cuda/targets/ppc64le-linux/lib/libcudnn.so.*" %}
  {% endif %}
# cuDNN license: https://developer.nvidia.com/cudnn/license_agreement
RUN CUDNN_DOWNLOAD_SUM={{ cuda.cudnn.sha256sum }} && \
    {# Versioning is all over the place for early cudnn #}
    {% if cuda.version.major_minor == "9.1" %}
        {% set cudnn_url_version = cuda.cudnn.version %}
        {% set cudnn_url_version2 = cuda.cudnn.version[:cuda.cudnn.version.rfind(".")] %}
        {% if arch == "ppc64le" %}
            {% set cudnn_url_version2 = cuda.cudnn.version[0] %}
        {% endif %}
    {% elif cuda.version.major_minor == "8.0" %}
        {% if cudnn_version[0] | int == 5 or cudnn_version[0] | int == 6 %}
            {% set cudnn_url_version = cuda.cudnn.version[:cuda.cudnn.version.rfind(".")] %}
            {% set cudnn_url_version2 = cuda.cudnn.version[:cuda.cudnn.version.rfind(".")] %}
        {% elif cudnn_version[0] | int == 7 %}
            {% set cudnn_url_version = cuda.cudnn.version[:cuda.cudnn.version.rfind(".")] %}
            {% if arch == "ppc64le" %}
                {% set cudnn_url_version2 = cuda.cudnn.version[:cuda.cudnn.version.rfind(".")-4] %}
            {% else %}
                {% set cudnn_url_version2 = cuda.cudnn.version[:cuda.cudnn.version.rfind(".")-2] %}
            {% endif %}
        {% else %}
            {% set cudnn_url_version = cuda.cudnn.version[:3] %}
            {% set cudnn_url_version2 = cuda.cudnn.version[:cuda.cudnn.version.rfind(".")] %}
            {% if arch == "ppc64le" %}
                {% set cudnn_url_version2 = cuda.cudnn.version[0] %}
            {% endif %}
        {% endif %}
    {% else %}
        {% set cudnn_url_version = cuda.cudnn.version[:cuda.cudnn.version.rfind(".")] %}
        {% set cudnn_url_version2 = cudnn_version %}
    {% endif %}
    curl -fsSL http://developer.download.nvidia.com/compute/redist/cudnn/v{{ cudnn_url_version }}/cudnn-{{ cuda.version.major }}.{{ cuda.version.minor }}-linux-{{ arch }}-v{{ cudnn_url_version2 }}.tgz -O && \
    echo "$CUDNN_DOWNLOAD_SUM  cudnn-{{ cuda.version.major }}.{{ cuda.version.minor }}-linux-{{ arch }}-v{{ cudnn_url_version2 }}.tgz" | sha256sum -c - && \
    gunzip cudnn-{{ cuda.version.major }}.{{ cuda.version.minor }}-linux-{{ arch }}-v{{ cudnn_url_version2 }}.tgz && \
    tar --no-same-owner -xf cudnn-{{ cuda.version.major }}.{{ cuda.version.minor }}-linux-{{ arch }}-v{{ cudnn_url_version2 }}.tar -C /usr/local {% if cuda.cudnn.target == "runtime" -%}--wildcards '{{ archive_path }}' {% endif -%} && \
    rm cudnn-{{ cuda.version.major }}.{{ cuda.version.minor }}-linux-{{ arch }}-v{{ cudnn_url_version2 }}.tar && \
    ldconfig
{% endif %}
